<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AADXDQAA1w0AAAAAAAAAAAAAAAAAALikkgCtmYcvvamXnb+rmau/q5mqv6uZqr+rmaq/q5mquKmUqqS4
        kbGv06jkstWr/a3RpdidwZBhbZRSBgAAAAD/+usAvKmXidK/rv/Yxrf/1cOz/9fGt//Vw7P/1sW1/73F
        pv+42rP/tNiv/6PHmP+43LT/tdiw7J3BkGEAAAAA////AL+rmZbYxrf/8u3o/+LVyf/y7Of/4tXK/+Xl
        2f+62bT/vN+5/6nNoP+mypz/pcmb/73guv+t0KXXAAAAAP///wC/q5mW1cOz/+LVyf/ayrv/4dTI/9vK
        vP/Qz7r/udqz/73guv+u0ab/pMia/67Sp/++4bv/stas+wAAAAD///8Av6uZltfGt//y7Of/4dTI//Hr
        5v/i1cn/4uPW/7ratf+73rj/oMWV/6zPo/+v0qf/veC7/6/Sp+QAAAAA////AL+rmZbVw7P/4tXJ/9rK
        u//h1Mj/2sq7/97Sxf+8y6v/ut62/7DUqf+dwpH/tdiv/7jbtPihxZZ/AAAAAP///wC/q5mW18a3//Ls
        5//h1Mj/8evm/+HUyP/y7Ob/1s27/7jGo/+31a3/tdau/7LTq+uix5d8gKZrDgAAAAD///8Av6uZltXD
        s//i1cn/2sq7/+HUyP/ayrv/4dTJ/9nHuP/QwbD/xMSx/8XAqP+0rJKdAAsAAnSZXAAAAAAA////AL+r
        mZbXxrf/8uzn/+HUyf/x6+b/4dTJ//Ls5//ezsD/ycrA/7Lh6f/Pxbj/wKuZlv///wAAAAAAAAAAAP//
        /wC/q5mW1MKx/93Owf/Yx7f/3c7A/9jHt//dzsH/18W1/9DDtf/Jy8H/0sGx/7+rmZb///8AAAAAAAAA
        AAD///8AybipluHSxf/i0sb/4tLH/+LSxv/i0sf/4tLG/+LTx//j08f/49LG/+HSxf/JuKmW////AAAA
        AAAAAAAA////ANDBtZbl3ND/ztS8/83VvP/N1bz/zdW8/83VvP/N1bz/zNW8/87UvP/l3ND/0MG1lv//
        /wAAAAAAAAAAAP///wDRwbWW39jK/7fVr/+63rf/ut62/7ret/+53bX/r9Oo/67Sp/+y0aj/39nK/9HB
        tZb///8AAAAAAAAAAAD///8A0cG2luDZy/+40q3/udiy/7nXsv+517L/udex/7jWr/+41q//uNGs/+DZ
        y//RwbaW////AAAAAAAAAAAA////AM6/sorn29H/4NnL/9/Yyv/f2Mr/39jK/9/Yyv/f2Mr/39jK/+DZ
        y//n29H/zr6yif///wAAAAAAAAAAAM29sAC9rJ4vzr+yndDBtavRwbWq0cG1qtHBtarRwbWq0cG1qtHB
        tarQwbWrzr+ynb6snS/NvbAAAAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAQAAwAMAAMAD
        AADAAwAAwAMAAMADAADAAwAAwAMAAMADAAAoAAAAIAAAAEAAAAABACAAAAAAAAAQAADXDQAA1w0AAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIRuWgB+aVQGlH9sMJeCb0aXgW9Gl4FvRpeBb0aXgW9Gl4FvRpeB
        b0aXgW9Gl4FvRpeBb0aXgW9Gl4FvRpmCcEaRgGlFhKBsWZO4haegxJXlpcmb/aTImficwI/QjbJ8hHme
        YiYAAAAARnAkAAAAAAAAAAAAAAAAAAAAAACSfGsAdmBPBKWRf3O9qpjjxbGg9sWxoPbFsaD2xbGg9sWx
        oPbFsaD2xbGg9sWxoPbFsaD2xbGg9sWxoPbFsaD2vq6Z9qGsh/aoyZ34uNu0/rzfuf++4bv/veC7/7ve
        uP+01678oMSUzoarck9SeiwCc5lZAAAAAAAAAAAAAAAAAJaBbgCUf2wrvamY5NTBsP/VwrH/1cKw/9XC
        sP/VwrH/1cKx/9XCsP/VwrD/1cKx/9XCsf/VwrD/1cKx/9DArf+vvZf/s9as/77hu/+94Lr/vuG8/6bK
        nP+z1q3/vuG8/77hu/+837j/psqd5oarc0+43bMAAAAAAAAAAAAAAAAAlX9sAJeCbz7FsaD41cKx/9XC
        sf/Yx7j/2ci5/9bEtP/UwrH/2Me4/9nIuf/WxLT/1MKx/9jHuP/ZyLn/uLyd/6/Rp/++4bv/veC6/7zf
        uf+rz6P/h6x0/5a7iP+02K//veC6/73guv+837j/oMSUzXifYSYAAAAAAAAAAAAAAACUf2wAl4FvPsWx
        oPjVwrD/2Me4//by7v/7+ff/49fM/9jGt//28u7/+/n3/+PXzP/Yxrf/9vLv/+/w6f+xzKb/u9+4/73g
        uv++4bv/psqd/46zff+fw5P/mb6M/5G2gf+22rH/veC6/77hu/+01678jbJ8hgAAAAAAAAAAAAAAAJR/
        bACXgW8+xbGg+NXCsP/ZyLn/+vj2///////l2tD/2Me3//r49v//////5drQ/9jHt//8+fj/4Orb/7HS
        qf+94bv/veC6/73gu/+myp3/r9Oo/8Djvv+94Lr/kbaC/63Qpf++4bv/veC6/7vfuP+cwI/QAAAAAAAA
        AAAAAAAAlH9sAJeBbz7FsaD41cKx/9bEtP/j18z/5trQ/9vLvf/Ww7P/49fM/+ba0P/by73/1sOz/+XY
        zv/Dyq//s9at/77hu/+94Lr/veC6/77hu/+43LT/rdGl/57Ckf+QtX//ttmx/73gu/+94Lr/veC6/6TI
        mfcAAAAAAAAAAAAAAACUf2wAl4FvPsWxoPjVwrH/1MKx/9jGt//Yx7j/1sOz/9TCsf/Yxrf/2Me4/9bD
        s//UwrH/2ca4/7m9nv+0167/vuG7/73guv++4Lv/sdSq/5G1gf+TuIT/nsKS/7PXrf++4bv/veC6/73g
        uv++4bv/pcmb/AAAAAAAAAAAAAAAAJR/bACXgW8+xbGg+NXCsP/Yx7j/9vLu//v59//j18z/2Ma3//by
        7v/7+ff/49fM/9jGt//48/D/1uHN/7LUq/++4bv/veC6/77hu/+avoz/oMSU/73guv++4bz/tNeu/7nc
        tP+94Lr/veC6/7zguf+gxZXlAAAAAAAAAAAAAAAAlH9sAJeBbz7FsaD41cKw/9nIuf/6+Pb//////+Xa
        0P/Yx7f/+vj2///////l2tD/2Me3//v59//s8un/sNCo/73guv+94Lr/vuG7/53Ckf+ZvYv/tNeu/63R
        pv+PtH//stWr/77hu/+94Lr/uNu0/5O4hKgAAAAAAAAAAAAAAACUf2wAl4FvPsWxoPjVwrH/1sS0/+PX
        zP/m2tD/28u9/9bDs//j18z/5trQ/9vLvf/Ww7P/5NfM/+PYzf+zwp7/tdmw/77hu/+94Lr/ttqx/5m9
        i/+Fq3L/jLF6/6XJm/+837n/veC6/77hu/+pzaDrgqhuSwAAAAAAAAAAAAAAAJR/bACXgW8+xbGg+NXC
        sf/UwrH/2Ma3/9jHuP/Ww7P/1MKx/9jGt//Yx7j/1sOz/9TCsf/Yxrf/2ce4/8i/qP+pw5j/ut22/77h
        u/+94Lr/veC6/5i9i/+rz6P/vuG8/73guv++4bv/stWr/JC1gIhYfzcGAAAAAAAAAAAAAAAAlH9sAJeB
        bz7FsaD41cKw/9jHuP/28u7/+/n3/+PXzP/Yxrf/9vLu//v59//j18z/2Ma3//by7v/7+ff/5NjN/8C6
        n/+owpj/ttmx/73huv++4bv/udy1/7zfuP++4bv/vN+5/67SpveTuIOXdZxdEnyjZwAAAAAAAAAAAAAA
        AACUf2wAl4FvPsWxoPjVwrD/2ci5//r49v//////5drQ/9jHt//6+Pb//////+Xa0P/Yx7f/+vj2////
        ///m2tD/1MCv/8e8pP+vu5b/q8ed/7DSqP+z167/s9as/6zNov+dwJDLia52Y2yUUQ15n2IAAAAAAAAA
        AAAAAAAAAAAAAJR/bACXgW8+xbGg+NXCsf/WxLT/49fM/+ba0P/by73/1sOz/+PXzP/m2tD/28u9/9bD
        s//j18z/5trQ/9vLvf/Uwa//1cGx/9LArv/IvKT/vLqd/7e6mv+5u5v/sq2R+YyHaEimg34AVX0zAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAlH9sAJeBbz7FsaD41cKx/9TCsf/Yxrf/2Me4/9bDs//UwrH/2Ma3/9jH
        uP/Ww7P/1MKx/9jGt//Yx7j/1sOz/9TBsP/UwbD/0sO0/8/Guv/Qxrn/1cKy/9bCsv/GsaD4l4FvPpV+
        bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUf2wAl4FvPsWxoPjVwrD/2Me4//by7v/7+ff/49fM/9jG
        t//28u7/+/n3/+PXzP/Yxrf/9vLu//v59//k2M3/08Cv/9XAr//C0c3/qOr3/67k7v/Pxrj/1cKw/8Wx
        oPiXgW8+lH9sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJR/bACXgW8+xbGg+NXCsP/ZyLn/+vj2////
        ///l2tD/2Me3//r49v//////5drQ/9jHt//6+Pb//////+ba0P/TwK7/1cCu/8DU0P+h8P//qOr2/87G
        uf/VwrD/xbGg+JeBbz6Uf2wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlH9sAJeBbz7FsaD41cKx/9bE
        tP/k2M3/5tvR/9vLvf/Ww7P/5NjN/+bb0f/by73/1sOz/+TYzf/m29H/28u9/9TAr//Uwa//zMm9/8DU
        0f/C0c3/0sO0/9XCsf/FsaD4l4FvPpR/bAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACUf2wAl4FuPsWx
        n/jVwrD/1MCv/9O/rv/Tv67/08Cv/9TAr//Tv67/07+u/9PAr//UwK//07+u/9O/rv/TwK//1MGv/9TB
        r//UwK//1cCu/9XArv/UwK//1cKw/8Wxn/iXgW4+lH9sAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJV/
        bQCYgnA+yben+NvJuv/ayLn/2si5/9rIuf/ayLn/2si5/9rIuf/ayLn/2si5/9rIuf/ayLn/2si5/9rI
        uf/ayLn/2si5/9rIuf/ayLn/2si5/9rIuf/bybr/yben+JiCcD6Vf20AAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAloFvAJqFcz7WyL347ODW/+re1f/q3tX/6t7V/+re1f/q3tX/6t7V/+re1f/q3tX/6t7V/+re
        1f/q3tX/6t7V/+re1f/q3tX/6t7V/+re1f/q3tX/6t7V/+zg1v/WyL34moVzPpaBbwAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACWgW8AmoVzPtfJvfjs4Nj/69/W/+fd0v/m3NH/5tzR/+bc0f/m3NH/5tzR/+bc
        0f/m3NH/5tzR/+bc0f/m3NH/5tzR/+bc0f/m3NH/5tzR/+fd0v/r39b/7ODY/9fJvfiahXM+loFvAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJaBbwCahXM+18m9+O3h2P/h2cv/rsKc/6/Iof+vyKH/r8ih/6/I
        of+vyKH/r8ih/6/Iof+vyKH/r8ih/7DJov+wyKH/sMmi/7DJof+wyaH/rsKc/+HZy//t4dj/18m9+JqF
        cz6WgW8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAloFvAJqFcz7Xyb347eHZ/93Xx/+sy6H/vOC6/7zg
        uf+84Ln/vOC5/7zguf+84Ln/vOC5/7zguf+84Ln/stas/7XZsP+x1ar/s9iu/7XZsP+szKH/3dfH/+3h
        2f/Xyb34moVzPpaBbwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACWgW8AmoVzPtfJvfjt4dj/3dfH/63M
        ov+94bv/veC6/73guv+94Lr/veC6/73guv+94Lr/veC6/73guv+ny53/rdGm/6XJmv+rz6L/rdGl/67N
        o//d18f/7eHY/9fJvfiahXM+loFvAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJaBbwCahXM+18m9+O3h
        2P/d18f/rcyi/77ivP+94bv/veG7/73hu/+94bv/veG7/73hu/+94bv/veG7/77hu/++4bv/vuG7/77h
        u/++4rz/rcyi/93Xx//t4dj/18m9+JqFcz6WgW8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAloFvAJqF
        cz7Xyb347eHY/9/Yyf+owpj/rcyi/63Mov+tzKL/rcyi/63Mov+tzKL/rcyi/63Mov+tzKL/rcyi/63M
        ov+tzKL/rcyi/63Mov+owpj/39jJ/+3h2P/Xyb34moVzPpaBbwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACXgm8AmoVzPtfJvvjs4Nj/6d7U/9/Yyf/d18f/3dfH/93Xx//d18f/3dfH/93Xx//d18f/3dfH/93X
        x//d18f/3dfH/93Xx//d18f/3dfH/9/Yyf/p3tT/7ODY/9fJvviahXQ+l4FvAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJiEcQCYhHEs0cK25ezg1//s4Nj/7eHY/+3h2P/t4dj/7eHY/+3h2P/t4dj/7eHY/+3h
        2P/t4dj/7eHY/+3h2P/t4dj/7eHY/+3h2P/t4dj/7eHY/+zg2P/s4Nf/0cK25JmDcSuZg3EAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAkoBsAGtWPwS0opJ00sO249fJvvbXyb3218m99tfJvfbXyb3218m99tfJ
        vfbXyb3218m99tfJvfbXyb3218m99tfJvfbXyb3218m99tfJvfbXyb3218m+9tLDtuO1opJzbVI8BJR+
        bQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhG1YAHtkTQaZhHIwmoZ0RpqFc0aahXNGmoVzRpqF
        c0aahXNGmoVzRpqFc0aahXNGmoVzRpqFc0aahXNGmoVzRpqFc0aahXNGmoVzRpqFc0aahnRGmoRxMH5i
        TgaGbFgAAAAAAAAAAAAAAAAAAAAAAPgAAAfwAAAB8AAAAfAAAADwAAAA8AAAAPAAAADwAAAA8AAAAPAA
        AADwAAAA8AAAAPAAAAHwAAAD8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AA
        AA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/4AAAf
</value>
  </data>
</root>